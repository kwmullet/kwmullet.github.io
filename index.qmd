---
title: "Introduction to R Markdown"
author: Kevin Mullet &lt;kwm@unm.edu&gt;
date: 27 Jan 2025
format: 
   revealjs: 
      transition: fade
      transition-speed: fast
      footer: Introduction to R Markdown (kwm@unm.edu)
      theme: simple
---

## Overview:

::: {.callout-tip title="TLDR: How to put the text and R output from your work into a single, unified document, and save it as an MS-Word file."}
:::

## Overview:

::: incremental
-   What is R Markdown and why use it?
-   What needs to be in place to use it to generate MS-Word documents?
-   The structure of an R Markdown document
-   Visual and source editor modes
-   Markdown
-   blocks of R code with "**code snippets**"
:::

## Overview:

::: incremental
-   Formula notation
-   Tables of contents
-   Citations
-   Using a wordcount plugin to R Studio for word counts
-   Fine-tuning your MS-Word document
:::

## What is R Markdown and why use it? {.smaller}

-   "Literate Programming"
    -   In 1962, grad student Donald Knuth was approached by a publisher
        to write a book on compiler (computer language) design. In
        response (watch for more scope creep), he proposed a 12-chapter
        book on computer programming. The project eventually balooned to
        a seven volume set called "The Art of Computer Programming",
        only four of which have been published to date (he's currently
        86). Knuth, who later became a CS professor at Stanford, found
        the typesetting tools completely (to him) inadequate to convey
        the math formulas in the books, so he suspended work to invent
        $\TeX$ (not unlike Newton inventing calculus to describe
        physics). Once he did that, he invented something called
        "literate programming" where code, output, and the text of an
        article or book could co-exist on the same document.

## What is R Markdown and why use it? {.smaller}

-   R
    -   In 1993, Ross Ihaka and Robert Gentleman wrote a statistical
        programming language that would be an update to the then-popular
        "S". They named it R not only to promote it as a successor to S,
        but because it was the first letter of each of their names.

## What is R Markdown and why use it? {.smaller}

-   Markup Languages
    -   Since the early 1960s, so-called "markup" languages have been
        developed and used to add structure and control appearance of
        plain text documents. Among them are HyperText Markup Language
        (HTML), $\TeX$/$\LaTeX$, and Yet Another Markup Language (YAML).
    -   R-Markdown is both a pun (marking down instead of up) and a
        promotion of it being a next-generation mark(up\|down) language.

## What needs to be in place to use it to generate MS-Word documents? {.smaller}

::::: columns
::: {.column width="30%"}
On a fresh or fully-functional installation of R and R Studio which has
never created an R Markdown document, the user will be prompted to
approve installation of several packages the first time they create an R
Markdown document.
:::

::: {.column width="70%"}
![](./images/stuffToInstall.png)
:::
:::::

## The structure of an R Markdown document

YAML header -- You'll may add more here over time

```         
---
title: "My Sample Markdown Document"
author: "Eeyore Namehere"
date: "`r Sys.Date()`"
output: word_document
---
```

Setup block and snippet flags

![](./images/setupSnippet.png)

After the YAML and the setup block, you can put an arbitrary amount of
markup around R (or other languages, but that's "beyond the scope"
snippets.

## Visual and source editor modes

Differences between the source and visual editor modes

::::: columns
::: {.column width="60%"}
![](./images/sourceEditor.png)
:::

::: {.column width="40%"}
![](./images/visual%20editor.png)
:::
:::::

## Markdown

Header levels Lists Bold, italics links images

::::: columns
::: {.column width="50%"}
![](./images/sourceAndHeaders.png)
:::

::: {.column width="50%"}
![](./images/headersRendered.png)
:::
:::::

Markdown

## blocks of R code with "code snippets" and inline code.

Source view of R code snippet and inline code.
![](./images/snippetSource.png)

## blocks of R code with "code snippets" and inline code.

Knitted (rendered) view of R code snippet and inline code.
![](./images/renderedSnippet.png)

## "knitting" your document to HTML or MS-Word.

This button ![](./images/knit.png) will will turn you R Markdown into
whatever output you've chosen. Usually, this will be `word_document` or
`html_document`.

Remember the YAML header:

```         
---
title: "My Sample Markdown Document"
author: "Eeyore Namehere"
date: "`r Sys.Date()`"
output: word_document
---
```

## Formula notation {.larger}

Formulas are given as $\LaTeX$ between two dollar signs thus:

```         
$\hat{y}=\beta_0+\beta_1x+\epsilon$
```

yields

$\hat{y}=\beta_0+\beta_1x+\epsilon$

By the way,

```         
$\LaTeX$
```

yields

$\LaTeX$

## Tables of contents

If you modify your YAML header like this...

```         
---
title: "My Sample Markdown Document"
author: "Eeyore Namehere"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_depth: 2
---
```

## Tables of contents

...you will get a Table of Contents something like this at the top of
your document. If your output target is `word_document`, it will be
slightly more elaborate.

The TOC is constructed from all the lines using header style (#, ##,
###, etc.) ![](./images/htmlTOC.png)

## Citations

To use citations and automatically generate a Works Cited at the end of
the document, you can change your YAML like this. This isn't the only
approach, but this is what I've used.

```         
---
title: "My Sample Markdown Document"
author: "Eeyore Namehere"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_depth: 2
header-includes:
- \usepackage{apacite}
- \bibliographystyle{apacite}
bibliography: references.bib
---
```

Note that I've added a new section `header-includes:` and in it, I've
told knit to load the $\LaTeX$ package `apacite` for APA citations, and
told it to use APA bibliographic style. I've also added a section
`bibliography:` to tell it what file has my references, in Bibtex
format.

## Citations

Citations can be added by nesting it in a `[@blah]` construction like
this

```         
Here is some text in which I will cite references, such as [@olson2020] or perhaps @bowser2006 or a particular page of [@aragon2020, Page 34-55] or cite a DOI [@hodgson2006]
```

Citations that aren't in a bibliography file can be added with the DOI,
but that requires using the editor in visual mode, and choosing
Insert/Citation/From DOI.

![](./images/insertingFromDOI.png){fig-align="left" width="100%"}

## Citations

Once you knit your document, you should see your citations and reference
list show up something like this. You will probably want to put a
`# Works cited` or equivalent at the bottom of your document so it will
be immediately before the reference list.

![](./images/renderedCites.png){fig-align="left" width="100%"}

## Using a wordcount plugin to R Studio for word counts

demo using [this
plugin](%22https://github.com/benmarwick/wordcountaddin%22).

## Fine-tuning your MS-Word document

demo
